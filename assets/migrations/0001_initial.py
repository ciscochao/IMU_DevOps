# Generated by Django 2.2.6 on 2019-10-17 08:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assets_type', models.CharField(choices=[('server', '服务器'), ('network', '网络设备'), ('storage', '存储设备'), ('security', '安全设备'), ('software', '软件资产'), ('office', '办公设备'), ('other', '其他设备')], default='other', max_length=64, verbose_name='资产类型')),
                ('assets_num', models.CharField(max_length=128, null=True, unique=True, verbose_name='资产编号')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='资产序列号')),
                ('assets_name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('assets_status', models.SmallIntegerField(choices=[('0', '在线'), ('1', '下线'), ('2', '故障'), ('3', '备用'), ('4', '未知')], default=4, verbose_name='资产状态')),
                ('assets_manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP地址')),
                ('assets_purchase_day', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('assets_expire_day', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('assets_price', models.CharField(blank=True, max_length=100, null=True, verbose_name='价格(RMB)')),
                ('assets_c_time', models.DateTimeField(auto_now_add=True, verbose_name='批准时间')),
                ('assets_u_time', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('assets_memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('assets_admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='asset_admin', to=settings.AUTH_USER_MODEL, verbose_name='资产管理员')),
                ('assets_approved', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_approved', to=settings.AUTH_USER_MODEL, verbose_name='批准人')),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
                'db_table': 'imu_assets',
                'ordering': ['-assets_c_time'],
            },
        ),
        migrations.CreateModel(
            name='ContractAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='合同号')),
                ('name', models.CharField(max_length=100, verbose_name='合同名称')),
                ('price', models.IntegerField(verbose_name='合同金额')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='详细合同')),
                ('start_day', models.DateField(blank=True, null=True, verbose_name='生效日期')),
                ('end_day', models.DateField(blank=True, null=True, verbose_name='失效日期')),
                ('c_day', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('m_day', models.DateField(auto_now=True, verbose_name='修改日期')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '合同',
                'verbose_name_plural': '合同',
                'db_table': 'imu_contract_assets',
            },
        ),
        migrations.CreateModel(
            name='ManufacturerAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='厂商名称')),
                ('contacts', models.CharField(max_length=100, verbose_name='厂商联系人')),
                ('phone', models.CharField(max_length=11, null=True, unique=True, verbose_name='联系人电话')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='联系邮箱')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '厂商信息表',
                'verbose_name_plural': '厂商信息表',
                'db_table': 'imu_manufacturer_assets',
            },
        ),
        migrations.CreateModel(
            name='NewAssetApprovalZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='资产SN号')),
                ('assets_type', models.CharField(blank=True, choices=[('server', '服务器'), ('network', '网络设备'), ('storage', '存储设备'), ('security', '安全设备'), ('software', '软件资产'), ('office', '办公设备'), ('other', '其他设备')], default='server', max_length=64, null=True, verbose_name='资产类型')),
                ('manufacturer', models.CharField(blank=True, max_length=64, null=True, verbose_name='生产厂商')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='型号')),
                ('ram_volume', models.PositiveIntegerField(blank=True, null=True, verbose_name='内存大小')),
                ('cpu_model', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU型号')),
                ('cpu_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='CPU物理数量')),
                ('cpu_core_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='CPU核心数量')),
                ('os_distribution', models.CharField(blank=True, max_length=64, null=True, verbose_name='发行商')),
                ('os_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统类型')),
                ('os_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统版本号')),
                ('data', models.TextField(verbose_name='资产数据')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='汇报日期')),
                ('u_time', models.DateTimeField(auto_now=True, verbose_name='数据更新日期')),
                ('approved', models.BooleanField(default=False, verbose_name='是否批准')),
            ],
            options={
                'verbose_name': '新上线待批准资产',
                'verbose_name_plural': '新上线待批准资产',
                'db_table': 'imu_NewAssetApprovalZone',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='ProviderAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='供应商名称')),
                ('contact', models.CharField(blank=True, max_length=32, null=True, verbose_name='技术支持人员')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='支持电话')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='供应商邮箱')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '供应商表',
                'verbose_name_plural': '供应商表',
                'db_table': 'imu_provider_assets',
            },
        ),
        migrations.CreateModel(
            name='TagAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='标签名')),
                ('c_day', models.DateField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'db_table': 'imu_tag_assets',
            },
        ),
        migrations.CreateModel(
            name='StorageAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '磁盘阵列'), (1, '网络存储'), (2, '磁带库'), (3, '磁带机'), (4, '其他')], default=4, verbose_name='存储类型')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='设备序列号')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备型号')),
                ('firmware', models.CharField(blank=True, max_length=100, null=True, verbose_name='固件版本')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '存储设备资产表',
                'verbose_name_plural': '存储设备资产表',
                'db_table': 'imu_storage_assets',
            },
        ),
        migrations.CreateModel(
            name='SoftAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '操作系统'), (1, '数据库授权'), (2, '网络相关授权'), (3, '办公/开发软件'), (4, '业务软件'), (5, '其他')], default=5, verbose_name='软件资产类型')),
                ('license_num', models.IntegerField(default=1, verbose_name='授权数量')),
                ('version', models.CharField(blank=True, help_text='例如：Cent 5.2.9-2kali1', max_length=100, null=True, verbose_name='软件版本')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='soft_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '软件资产表',
                'verbose_name_plural': '软件资产表',
                'db_table': 'imu_soft_assets',
            },
        ),
        migrations.CreateModel(
            name='ServerAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '塔式服务器'), (1, '刀片服务器'), (2, '机架式服务器'), (3, '虚拟机'), (4, '容器'), (5, '云主机')], default=2, verbose_name='服务器类型')),
                ('create_by', models.CharField(choices=[('auto', '自动发现'), ('manual', '手工录入'), ('batch', '批量导入')], default='manual', max_length=32, verbose_name='添加方式')),
                ('hostname', models.CharField(max_length=100, unique=True, verbose_name='主机名')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='序列号')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='服务器型号')),
                ('raid_type', models.CharField(blank=True, max_length=512, null=True, verbose_name='RAID卡类型')),
                ('os_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统类型')),
                ('os_distribution', models.CharField(blank=True, max_length=64, null=True, verbose_name='发行商')),
                ('os_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='内核版本')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
                ('host_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='host_on_server', to='assets.ServerAssets', verbose_name='宿主机')),
            ],
            options={
                'verbose_name': '服务器资产表',
                'verbose_name_plural': '服务器资产表',
                'db_table': 'imu_server_assets',
            },
        ),
        migrations.CreateModel(
            name='SecurityAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, 'FireWall'), (1, 'IPS'), (2, 'IDS'), (3, 'vpn'), (4, 'AD'), (5, 'AC'), (6, 'WAF'), (7, 'DBScan'), (8, 'AES'), (9, 'other')], default=9, verbose_name='产品类型')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='设备序列号')),
                ('hostname', models.CharField(max_length=100, unique=True, verbose_name='主机名')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备型号')),
                ('firmware', models.CharField(blank=True, max_length=100, null=True, verbose_name='固件版本')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '安全设备资产表',
                'verbose_name_plural': '安全设备资产表',
                'db_table': 'imu_security_assets',
            },
        ),
        migrations.CreateModel(
            name='OtherAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='SN号')),
                ('admin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='other_admin', to=settings.AUTH_USER_MODEL, verbose_name='资产管理员')),
            ],
            options={
                'verbose_name': '其他资产表',
                'verbose_name_plural': '其他资产表',
                'db_table': 'imu_other_assets',
            },
        ),
        migrations.CreateModel(
            name='OfficeAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '台式电脑'), (1, '笔记本'), (2, '打印机'), (3, '传真机'), (4, 'PAD'), (5, '手机'), (6, '电话'), (7, '其他')], default=7, verbose_name='办公设备类型')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='设备序列号')),
                ('user', models.CharField(max_length=100, unique=True, verbose_name='使用人')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='office_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '办公设备资产表',
                'verbose_name_plural': '办公设备资产表',
                'db_table': 'imu_office_assets',
            },
        ),
        migrations.CreateModel(
            name='NetworkAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '路由器'), (1, '交换机'), (2, 'WLC'), (3, 'AP'), (4, '流量控制')], default=1, verbose_name='设备类型')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='设备序列号')),
                ('hostname', models.CharField(max_length=100, unique=True, verbose_name='主机名')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备型号')),
                ('port_num', models.IntegerField(blank=True, null=True, verbose_name='端口数')),
                ('firmware', models.CharField(blank=True, max_length=100, null=True, verbose_name='固件版本')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '网络设备资产表',
                'verbose_name_plural': '网络设备资产表',
                'db_table': 'imu_network_assets',
            },
        ),
        migrations.CreateModel(
            name='IDCAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='机房名称')),
                ('address', models.CharField(max_length=100, unique=True, verbose_name='机房地址')),
                ('contact', models.CharField(max_length=32, verbose_name='机房联系人')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='支持电话')),
                ('memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.ContractAssets', verbose_name='机房合同')),
            ],
            options={
                'verbose_name': '机房表',
                'verbose_name_plural': '机房表',
                'db_table': 'imu_idc_assets',
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='事件名称')),
                ('type', models.SmallIntegerField(choices=[(0, '其他'), (1, '硬件变更'), (2, '新增配件'), (3, '设备下线'), (4, '设备上线'), (5, '定期维护'), (6, '系统升级'), (7, '业务上线/变更/更新')], default=0, verbose_name='事件类型')),
                ('component', models.CharField(blank=True, max_length=256, null=True, verbose_name='事件子项')),
                ('detail', models.TextField(verbose_name='事件详情')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='事件时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('assets', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Assets')),
                ('new_assets', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.NewAssetApprovalZone')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='事件执行人')),
            ],
            options={
                'verbose_name': '事件记录',
                'verbose_name_plural': '事件记录',
                'db_table': 'imu_log_assets',
            },
        ),
        migrations.CreateModel(
            name='DomainAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='域名名称')),
                ('address', models.URLField(max_length=100, verbose_name='域名地址')),
                ('int_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='对内IP地址')),
                ('out_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='对外IP地址')),
                ('department', models.CharField(blank=True, max_length=64, null=True, verbose_name='所属部门')),
                ('admin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='domain_admin', to=settings.AUTH_USER_MODEL, verbose_name='域名管理员')),
            ],
            options={
                'verbose_name': '域名表',
                'verbose_name_plural': '域名表',
                'db_table': 'imu_domain_assets',
            },
        ),
        migrations.CreateModel(
            name='CPUAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU型号')),
                ('count', models.PositiveSmallIntegerField(default=1, verbose_name='物理CPU个数')),
                ('core_count', models.PositiveSmallIntegerField(default=1, verbose_name='CPU核数')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cpu_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPU',
                'db_table': 'imu_cpu_assets',
            },
        ),
        migrations.CreateModel(
            name='CloudAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, '公有云'), (1, '私有云')], default=1, verbose_name='云类型')),
                ('brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='云厂商')),
                ('admin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='cloud_admin', to=settings.AUTH_USER_MODEL, verbose_name='云平台管理员')),
            ],
            options={
                'verbose_name': '云平台资产表',
                'verbose_name_plural': '云平台资产表',
                'db_table': 'imu_cloud_assets',
            },
        ),
        migrations.CreateModel(
            name='CabinetAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='机柜名称')),
                ('U_num', models.CharField(blank=True, max_length=100, verbose_name='机柜总U数')),
                ('used', models.CharField(blank=True, max_length=100, verbose_name='已使用空间')),
                ('memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('idc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cabinet', to='assets.IDCAssets')),
            ],
            options={
                'verbose_name': '机柜表',
                'verbose_name_plural': '机柜表',
                'db_table': 'imu_cabinet_assets',
            },
        ),
        migrations.CreateModel(
            name='BusinessAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='业务线名称')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='所属部门')),
                ('charge', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='业务负责人')),
            ],
            options={
                'verbose_name': '业务线资产表',
                'verbose_name_plural': '业务线资产表',
                'db_table': 'imu_business_assets',
            },
        ),
        migrations.AddField(
            model_name='assets',
            name='assets_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.BusinessAssets', verbose_name='所属业务线'),
        ),
        migrations.AddField(
            model_name='assets',
            name='assets_cabinet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assets_cabinet', to='assets.CabinetAssets', verbose_name='所在机柜'),
        ),
        migrations.AddField(
            model_name='assets',
            name='assets_contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.ContractAssets', verbose_name='合同'),
        ),
        migrations.AddField(
            model_name='assets',
            name='assets_idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assets_idc', to='assets.IDCAssets', verbose_name='所在机房'),
        ),
        migrations.AddField(
            model_name='assets',
            name='assets_manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.ManufacturerAssets', verbose_name='厂商'),
        ),
        migrations.AddField(
            model_name='assets',
            name='assets_tags',
            field=models.ManyToManyField(blank=True, to='assets.TagAssets', verbose_name='资产标签'),
        ),
        migrations.CreateModel(
            name='RAMAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='SN号')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='内存型号')),
                ('brand', models.CharField(blank=True, max_length=128, null=True, verbose_name='内存制造商')),
                ('slot', models.CharField(max_length=64, verbose_name='插槽')),
                ('volume', models.IntegerField(blank=True, null=True, verbose_name='内存大小(GB)')),
                ('assets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ram_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '内存',
                'verbose_name_plural': '内存',
                'db_table': 'imu_ram_assets',
                'unique_together': {('assets', 'slot')},
            },
        ),
        migrations.CreateModel(
            name='NICAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='网卡名称')),
                ('model', models.CharField(max_length=128, verbose_name='网卡型号')),
                ('mac', models.CharField(max_length=64, verbose_name='MAC地址')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('net_mask', models.CharField(blank=True, max_length=64, null=True, verbose_name='掩码')),
                ('binding', models.CharField(blank=True, max_length=64, null=True, verbose_name='绑定地址')),
                ('assets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nic_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '网卡',
                'verbose_name_plural': '网卡',
                'db_table': 'imu_nic_assets',
                'unique_together': {('assets', 'model', 'mac')},
            },
        ),
        migrations.CreateModel(
            name='DiskAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='硬盘SN号')),
                ('slot', models.CharField(blank=True, max_length=64, null=True, verbose_name='所在插槽位')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='磁盘型号')),
                ('brand', models.CharField(blank=True, max_length=128, null=True, verbose_name='磁盘制造商')),
                ('volume', models.FloatField(blank=True, null=True, verbose_name='磁盘容量(GB)')),
                ('interface_type', models.CharField(choices=[('SATA', 'SATA'), ('SAS', 'SAS'), ('SCSI', 'SCSI'), ('SAS', 'SAS'), ('IDE', 'IDE'), ('Fiber Channel', 'Fiber Channel'), ('UNKNOWN', 'UNKNOWN')], default='unknown', max_length=16, verbose_name='接口类型')),
                ('assets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disk_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '硬盘',
                'verbose_name_plural': '硬盘',
                'db_table': 'imu_disk_assets',
                'unique_together': {('assets', 'sn')},
            },
        ),
    ]
